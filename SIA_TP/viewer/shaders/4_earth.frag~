#version 410
#define M_PI 3.14159265358979323846

uniform float lightIntensity;
uniform sampler2D earthDay;
uniform sampler2D earthNormals;
uniform mat3x3 normalMatrix;
uniform bool blinnPhong;
uniform float shininess;
uniform float eta;

in vec4 eyeVector;
in vec4 lightVector;
in vec4 vertColor;
in vec3 vertNormal;

in vec3 vert; 

out vec4 fragColor;

void main( void )
{
    // Here begins the real work.
    vec3 d = normalize(vert);  
    vec2 uvCoord ; 
    uvCoord.x = 0.5 + atan(d.x,d.z)/(2*M_PI); 
    uvCoord.y = 0.5 - (asin(d.y))/M_PI ; 


    vec4 reflexion = 2*dot(normalize(vec4(vertNormal, 1.0)),normalize(lightVector))*(vec4(vertNormal, 1.0) - lightVector) ;
    vec4 ambiant = 0.33 * vertColor * lightIntensity ;
    vec4 diffuse = 0.33 * vertColor * max(dot(vec4(vertNormal, 1.0),lightVector), 0) * lightIntensity;
    vec4 vecH = normalize(eyeVector + lightVector);  
    vec4 specular = 0.33 * vertColor * pow(max(dot(vec4(vertNormal, 1.0), vecH), 0),4*shininess) * lightIntensity ;     
     //Fresnel 
    float Fo = pow((1 - eta),2)/pow((1+eta),2) ; 
    float Fresnel = Fo + (1 - Fo)*pow((1 - dot(vecH,eyeVector)),5) ; 

    fragColor = ambiant + diffuse + Fresnel*specular + texture2D(earthDay, uvCoord);
}
